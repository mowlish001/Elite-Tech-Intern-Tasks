# -*- coding: utf-8 -*-
"""Task 2 (AI CHATBOT).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19Y1VQNQVBMSJKOF8CHKQ58iwTp-T35Hb
"""

import random
import json
import numpy as np
import string
import nltk
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

# Download required NLTK resources
nltk.download('punkt')
nltk.download('wordnet')

# Load intents from JSON
with open("intents.json", "r") as file:
    intents = json.load(file)

# Lemmatizer for preprocessing
lemmer = nltk.stem.WordNetLemmatizer()

def preprocess_text(text):
    text = text.lower().translate(str.maketrans('', '', string.punctuation))
    tokens = nltk.word_tokenize(text)
    return [lemmer.lemmatize(token) for token in tokens]

# Prepare corpus and tags
corpus = []
tags = []
responses_dict = {}

for intent in intents['intents']:
    for pattern in intent['patterns']:
        corpus.append(pattern)
        tags.append(intent['tag'])
    responses_dict[intent['tag']] = intent['responses']

# Vectorize patterns
vectorizer = TfidfVectorizer(tokenizer=preprocess_text, stop_words='english')
X = vectorizer.fit_transform(corpus)

# Chatbot response logic
def get_response(user_input):
    user_vec = vectorizer.transform([user_input])
    similarity = cosine_similarity(user_vec, X)
    idx = np.argmax(similarity)
    confidence = similarity[0][idx]

    if confidence < 0.3:
        return "I'm sorry, I didn't understand that. Can you rephrase?"

    intent_tag = tags[idx]
    return random.choice(responses_dict[intent_tag])

# Main loop
print("ðŸ¤– Chatbot: Hello! I'm your college assistant. Type 'quit' to exit.")
while True:
    user_input = input("ðŸ‘¤ You: ")
    if user_input.lower() in ["quit", "exit", "bye"]:
        print("ðŸ¤– Chatbot: Goodbye! Have a great day.")
        break
    response = get_response(user_input)
    print("ðŸ¤– Chatbot:", response)